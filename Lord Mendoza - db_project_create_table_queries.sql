-- Lord Mendoza - G00841164
-- CS 550 - DB Project - Part 1

CREATE TABLE ITEM
(
    ITEM_ID INTEGER,
    WEIGHT  FLOAT,
    PRIMARY KEY (ITEM_ID)
);

CREATE TABLE MATERIAL
(
    MATERIAL_ITEM_ID INTEGER,
    WEIGHT           FLOAT,
    PRIMARY KEY (MATERIAL_ITEM_ID),
    FOREIGN KEY (MATERIAL_ITEM_ID) REFERENCES ITEM (ITEM_ID) ON DELETE CASCADE
);

CREATE TABLE PRODUCT
(
    PRODUCT_ITEM_ID INTEGER,
    WEIGHT          FLOAT,
    PRIMARY KEY (PRODUCT_ITEM_ID),
    FOREIGN KEY (PRODUCT_ITEM_ID) REFERENCES ITEM (ITEM_ID) ON DELETE CASCADE
);

CREATE TABLE MATERIAL_ASSOCIATED_WITH_PRODUCT
(
    MATERIAL_ITEM_ID INTEGER,
    PRODUCT_ITEM_ID  INTEGER,
    QTY              INTEGER,
    FOREIGN KEY (MATERIAL_ITEM_ID) REFERENCES ITEM (ITEM_ID),
    FOREIGN KEY (PRODUCT_ITEM_ID) REFERENCES ITEM (ITEM_ID)
);

CREATE TABLE BUSINESS
(
    BUSINESS_ID       INTEGER,
    SHIPPING_LOCATION VARCHAR(255),
    ADDRESS           VARCHAR(255),
    PHONE             VARCHAR(10),
    WEB_LOCATION      VARCHAR(255),
    CONTACT_INFO      VARCHAR(255),
    PRIMARY KEY (BUSINESS_ID)
);

CREATE TABLE SUPPLIER
(
    SUPPLIER_BUSINESS_ID INTEGER,
    SHIPPING_LOCATION    VARCHAR(255),
    ADDRESS              VARCHAR(255),
    PHONE                VARCHAR(10),
    WEB_LOCATION         VARCHAR(255),
    CONTACT_INFO         VARCHAR(255),
    PRIMARY KEY (SUPPLIER_BUSINESS_ID),
    FOREIGN KEY (SUPPLIER_BUSINESS_ID) REFERENCES BUSINESS (BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE CUSTOMER
(
    CUSTOMER_BUSINESS_ID INTEGER,
    SHIPPING_LOCATION    VARCHAR(255),
    ADDRESS              VARCHAR(255),
    PHONE                VARCHAR(10),
    WEB_LOCATION         VARCHAR(255),
    CONTACT_INFO         VARCHAR(255),
    PRIMARY KEY (CUSTOMER_BUSINESS_ID),
    FOREIGN KEY (CUSTOMER_BUSINESS_ID) REFERENCES BUSINESS (BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE MANUFACTURER
(
    MANUFACTURER_BUSINESS_ID INTEGER,
    SHIPPING_LOCATION        VARCHAR(255),
    ADDRESS                  VARCHAR(255),
    PHONE                    VARCHAR(10),
    WEB_LOCATION             VARCHAR(255),
    CONTACT_INFO             VARCHAR(255),
    PRIMARY KEY (MANUFACTURER_BUSINESS_ID),
    FOREIGN KEY (MANUFACTURER_BUSINESS_ID) REFERENCES BUSINESS (BUSINESS_ID) ON DELETE CASCADE
);

-- On ER Diagram as "Carries_Supply_For"
CREATE TABLE ITEM_SUPPLIED_BY_SUPPLIER
(
    ITEM_ID              INTEGER,
    SUPPLIER_BUSINESS_ID INTEGER,
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID),
    FOREIGN KEY (SUPPLIER_BUSINESS_ID) REFERENCES SUPPLIER (SUPPLIER_BUSINESS_ID)
);

-- On ER Diagram as "Supplies_To_1"
CREATE TABLE SUPPLIER_TO_CUSTOMER
(
    SUPPLIER_BUSINESS_ID INTEGER,
    CUSTOMER_BUSINESS_ID INTEGER,
    PRICE_PER_UNIT       FLOAT,
    ITEM_ID              INTEGER,
    VOLUME_DISCOUNT      FLOAT,
    FOREIGN KEY (SUPPLIER_BUSINESS_ID) REFERENCES SUPPLIER (SUPPLIER_BUSINESS_ID),
    FOREIGN KEY (CUSTOMER_BUSINESS_ID) REFERENCES CUSTOMER (CUSTOMER_BUSINESS_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID)
);

-- On ER Diagram as "Supplies_To_2"
CREATE TABLE SUPPLIER_TO_MANUFACTURER
(
    SUPPLIER_BUSINESS_ID     INTEGER,
    MANUFACTURER_BUSINESS_ID INTEGER,
    PRICE_PER_UNIT           FLOAT,
    ITEM_ID                  INTEGER,
    VOLUME_DISCOUNT          FLOAT,
    FOREIGN KEY (SUPPLIER_BUSINESS_ID) REFERENCES SUPPLIER (SUPPLIER_BUSINESS_ID),
    FOREIGN KEY (MANUFACTURER_BUSINESS_ID) REFERENCES MANUFACTURER (MANUFACTURER_BUSINESS_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID)
);

-- On ER Diagram as "Sells_To"
CREATE TABLE MANUFACTURER_TO_CUSTOMER
(
    CUSTOMER_BUSINESS_ID     INTEGER,
    MANUFACTURER_BUSINESS_ID INTEGER,
    PRICE_PER_UNIT           FLOAT,
    ITEM_ID                  INTEGER,
    VOLUME_DISCOUNT          FLOAT,
    FOREIGN KEY (CUSTOMER_BUSINESS_ID) REFERENCES CUSTOMER (CUSTOMER_BUSINESS_ID),
    FOREIGN KEY (MANUFACTURER_BUSINESS_ID) REFERENCES MANUFACTURER (MANUFACTURER_BUSINESS_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID)
);

-- On ER Diagram as "Demand_For"
CREATE TABLE CUSTOMER_DEMAND
(
    CUSTOMER_BUSINESS_ID INTEGER,
    ITEM_ID              INTEGER,
    DEMAND_QTY           INTEGER,
    FOREIGN KEY (CUSTOMER_BUSINESS_ID) REFERENCES CUSTOMER (CUSTOMER_BUSINESS_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID)
);

-- On ER Diagram as "Produces"
CREATE TABLE MANUFACTURER_PRODUCES_PRODUCT
(
    MANUFACTURER_BUSINESS_ID INTEGER,
    PRODUCT_ITEM_ID          INTEGER,
    SET_UP_COST              FLOAT,
    COST_PER_UNIT            FLOAT,
    FOREIGN KEY (MANUFACTURER_BUSINESS_ID) REFERENCES MANUFACTURER (MANUFACTURER_BUSINESS_ID),
    FOREIGN KEY (PRODUCT_ITEM_ID) REFERENCES PRODUCT (PRODUCT_ITEM_ID)
);

CREATE TABLE SHIPPER
(
    SHIPPER_ID INTEGER,
    PRIMARY KEY (SHIPPER_ID)
);

-- On ER Diagram as "Ships_To"
CREATE TABLE SHIPPER_TO_BUSINESS
(
    SHIPPER_ID      INTEGER,
    SOURCE          VARCHAR(255),
    DESTINATION     VARCHAR(255),
    TOTAL_WEIGHT    FLOAT,
    PRICE           FLOAT,
    VOLUME_DISCOUNT FLOAT,
    FOREIGN KEY (SHIPPER_ID) REFERENCES SHIPPER (SHIPPER_ID)
);

-- On ER Diagram as "Order"
CREATE TABLE BUSINESS_ORDER
(
    ORDER_ID INTEGER,
    PRIMARY KEY (ORDER_ID)
);

CREATE TABLE SHIPMENT_ORDER
(
    ORDER_ID  INTEGER,
    ITEM_ID   INTEGER,
    SHIPPER   VARCHAR(255),
    SENDER    VARCHAR(255),
    RECEPIENT INTEGER,
    QTY       INTEGER,
    FOREIGN KEY (ORDER_ID) REFERENCES BUSINESS_ORDER (ORDER_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID),
    FOREIGN KEY (RECEPIENT) REFERENCES BUSINESS (BUSINESS_ID)
);

CREATE TABLE MANUFACTURER_ORDER
(
    ORDER_ID        INTEGER,
    ITEM_ID         INTEGER,
    MANUFACTURER_ID INTEGER,
    QTY             INTEGER,
    FOREIGN KEY (ORDER_ID) REFERENCES BUSINESS_ORDER (ORDER_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID),
    FOREIGN KEY (MANUFACTURER_ID) REFERENCES MANUFACTURER (MANUFACTURER_BUSINESS_ID)
);

CREATE TABLE SUPPLY_ORDER
(
    ORDER_ID    INTEGER,
    ITEM_ID     INTEGER,
    SUPPLIER_ID INTEGER,
    QTY         INTEGER,
    FOREIGN KEY (ORDER_ID) REFERENCES BUSINESS_ORDER (ORDER_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER (SUPPLIER_BUSINESS_ID)
);

-- On ER Diagram as "Associated_With"
CREATE TABLE ITEM_ASSOCIATED_TO_ORDER
(
    ITEM_ID  INTEGER,
    ORDER_ID INTEGER,
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID),
    FOREIGN KEY (ORDER_ID) REFERENCES BUSINESS_ORDER (ORDER_ID)
);

-- On ER Diagram as "Makes"
CREATE TABLE BUSINESS_TO_ORDER
(
    BUSINESS_ID INTEGER,
    ORDER_ID    INTEGER,
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS (BUSINESS_ID),
    FOREIGN KEY (ORDER_ID) REFERENCES BUSINESS_ORDER (ORDER_ID)
);